user www-data;
worker_processes 4;
pid /run/nginx.pid;
daemon off;

events {
  worker_connections  2048;
  multi_accept on;
  use epoll;
}

http {

  server_tokens off;
  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  keepalive_timeout 15;
  default_type application/octet-stream;
  include /etc/nginx/mime.types;
  access_log /dev/stdout;
  error_log /dev/stderr;
  gzip on;
  fastcgi_buffers 16 16k;
  fastcgi_buffer_size 32k;  
  types_hash_max_size 2048;
  client_max_body_size 200M;

  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';

  # terminate https and proxy to main entrypoint on port 8888
  server {
  
      listen 443 ssl;
      server_name localhost;
      ssl_certificate /etc/nginx/ssl/localhost.crt;
      ssl_certificate_key /etc/nginx/ssl/localhost.key;

      location / {
        proxy_redirect off;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Upgrade $http_upgrade;
        proxy_pass http://nginx:8888/;
      }
  }

  # main entrypoint
  server {

      listen 8888;
      server_name local;
      root /var/www/public/;
      index index.html index.htm;

      location = / {
        return 301 https://$host/app/;
      }

      # send api to fastapi
      location ~ ^/(api|app)/ {
        proxy_redirect off;
        proxy_buffering off;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Upgrade $http_upgrade;
        proxy_pass http://python:8000;
      }

      # serve static files directly
      location /static {
        root /;
      }

#      #send everything else to vue
#      location / {
#        proxy_redirect off;
#        proxy_http_version 1.1;
#        proxy_set_header Host $host;
#        proxy_set_header Connection "Upgrade";
#        proxy_set_header Upgrade $http_upgrade;
#
#        proxy_pass http://vue:4000/;
#      }

      location ~ /\.ht {
        deny all;
      }
  }

  # serve php
  server {
      listen 9090;
      index index.php index.html;
      server_name localhost;
      error_log  /var/log/nginx/error.log;
      access_log /var/log/nginx/access.log;
      root /code;

      location / {
        try_files $uri $uri/ /index.php$is_args$args;
      }

      location ~ \.php$ {
          try_files $uri =404;
          fastcgi_split_path_info ^(.+\.php)(/.+)$;
          fastcgi_pass php:9000;
          fastcgi_index index.php;
          include fastcgi_params;
          fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
          fastcgi_param PATH_INFO $fastcgi_path_info;
          fastcgi_read_timeout 900;
          proxy_read_timeout 900;
      }
  }

  open_file_cache off; # Disabled for issue 619
  charset UTF-8;
}
